import { type NextPage } from "next";
import Head from "next/head";
import { FormEvent, useRef, useState } from "react";
import { api } from "../../utils/api";

export const Home: NextPage = () => {
  const inputRef = useRef<HTMLInputElement>(null);
  const [bookId, setBookId] = useState<string>("bERxDwAAQBAJ");
  const { data, refetch, isFetching } = api.books.checkBook.useQuery(
    { bookId },
    { enabled: false }
  );
  const onSubmit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const bookId = inputRef.current?.value;
    if (!bookId) return;
    setBookId(bookId);
    refetch();
  };
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className={`mx-auto flex min-h-screen flex-col bg-gradient-to-tr from-[#fff] to-[#2e026d] px-4 sm:px-6 lg:px-8`}
      >
        <div className="h-20" />
        <form className="mt-10" onSubmit={onSubmit}>
          <div className="relative">
            <div className="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
              <SearchIcon />
            </div>
            <input
              ref={inputRef}
              type="search"
              id="default-search"
              className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-4 pl-10 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
              placeholder="Paste the book ID here"
              required
              defaultValue={bookId}
              onChange={(e) => setBookId(e.target.value)}
              autoComplete="off"
            />
            <button
              type="submit"
              className="absolute right-2.5 bottom-2.5 rounded-lg bg-blue-700 px-4 py-2 text-sm font-medium text-white hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
            >
              Check
            </button>
          </div>
        </form>
        {isFetching ? (
          <div className="mt-10">Loading...</div>
        ) : (
          data && (
            <>
              <div className="mt-10 flex flex-wrap">
                {data.missingPages.map((id) => (
                  <span className="mx-2" key={"pa-" + id}>
                    {id}
                  </span>
                ))}
              </div>
              <div className="mt-10 flex flex-wrap">
                {data.missingPrefaces.map((id) => (
                  <span className="mx-2" key={"pr-" + id}>
                    {id}
                  </span>
                ))}
              </div>
            </>
          )
        )}
      </main>
    </>
  );
};

const SearchIcon = () => (
  <svg
    aria-hidden="true"
    className="h-5 w-5 text-gray-500 dark:text-gray-400"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
      d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
    ></path>
  </svg>
);
